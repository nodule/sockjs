'use strict';

var util = require('util');
var Scope = require('dyslexer').Scope;

/**
 *
 * This is the data scope it is entered
 * when a quoted string is encountered.
 *
 * It will quit the scope when we reach
 * the same quote type (' or "), unless
 * that quote was escaped.
 *
 */
function MetaScope(lexer) {
  Scope.apply(this, [lexer]);
}

util.inherits(MetaScope, Scope);

MetaScope.prototype.onEnter = function() {
};

MetaScope.prototype.onLineStart = function() {
  this.tokensExpected = 1;
  this.tokenEnding = '\n';
};

MetaScope.prototype.setup = function() {

  this.validate = {
    META: /^\w+:/,
    META_DATA: /.*/
  };

  // Used by the lexer to validate token combinations.
  this.structure = [
    ['META_DATA']
  ];

};

MetaScope.prototype.onToken = function(token) {

  if (this.tokens.length === 0) {
    // todo: the trailing \n should not be in the value, but it still is.
    // the space is ok.
    this.lexer.present('META_DATA', token.trim());
  }

};

module.exports = MetaScope;
