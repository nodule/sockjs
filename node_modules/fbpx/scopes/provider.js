'use strict';

var util = require('util');
var Scope = require('dyslexer').Scope;

/**
 *
 * This is the data scope it is entered
 * when a quoted string is encountered.
 *
 * It will quit the scope when we reach
 * the same quote type (' or "), unless
 * that quote was escaped.
 *
 */
function ProviderScope(lexer) {
  Scope.apply(this, [lexer]);
}

util.inherits(ProviderScope, Scope);

ProviderScope.prototype.onEnter = function() {
};

ProviderScope.prototype.onLineStart = function() {
  /* 4 is the max */
  this.tokensExpected = 4;

};

ProviderScope.prototype.setup = function() {

  this.validate = {
    PROVIDER_NS: /^[A-z_]+$/,
    AS: /^as$/i,
    PROVIDER_URL: /[A-z0-9:\-\/{}\.#]+/
  };

  // Used by the lexer to validate token combinations.
  this.structure = [
    ['PROVIDER', 'PROVIDER_URL'],
    ['PROVIDER', 'PROVIDER_URL', 'AS', 'PROVIDER_NS']
  ];

};

ProviderScope.prototype.onToken = function(token) {

  if (this.tokens.length === 0) {
    this.lexer.present('PROVIDER', token);
  } else if (this.tokens.length === 1) {
    this.lexer.present('PROVIDER_URL', token);
  } else if (this.tokens.length === 2) {
    this.lexer.present('AS', token);
  } else if (this.tokens.length === 3) {
    this.lexer.present('PROVIDER_NS', token);
  }

};

module.exports = ProviderScope;
