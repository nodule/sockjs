'use strict';

var util = require('util');

/**
 *
 * Handles the index
 *
 * @param {Link} link
 * @param {Packet} p
 * @api public
 */
module.exports = function handleIndex(link, p) {
  // TODO: data should be better defined and a typed object
  var index = link.source.get('index');
  if (/^\d+/.test(index)) {
    // numeric
    if (Array.isArray(p.data)) {
      if (index < p.data.length) {
        // new remember index.
        p.index = index;
        return p.data[index];
      }
      else {
        throw new Error(
          util.format(
            'index[] out-of-bounds on array output port `%s`',
            link.source.port
          )
        );
      }
    }
    else {
      throw new Error(
        util.format(
          'Got index[] on array output port `%s`, ' +
          'but data is not of the array type',
          link.source.port
        )
      );
    }
  }
  else {
    if (typeof p.data === 'object') {
      if (p.data.hasOwnProperty(index)) {
        // new remember index.
        p.index = index;
        return p.data[index];
      }
      else {
        // maybe do not fail hard and just send to the error port.
        console.log(p.data);
        throw new Error(
          util.format(
            'Property `%s` not found on object output port `%s`',
            index,
            link.source.port
          )
        );
      }
    }
    else {
      throw new Error(
        util.format(
          'Got index[] on non-object output port %s',
          link.source.port
        )
      );
    }
  }
};
