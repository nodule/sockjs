{
  // We need to hint what is our tokenEnding
  // also causes space to no longer be the token ending.
  //
  // Funky...
  // Multiple scopers should just be removed.
  // They will just use their own scope.
  // Or it can become a rule, stating the ending should
  // be the same as the scoper
  // Also note how the rootscope contains our scoper definition
  // this is kind wrong. this scope should tell what is/are the scoper(s)
  "tokenEnding": [this.lexer.scoper],

  // whether the lexer should check for
  // an escape \ one char back.
  "escape": true,

  "onLineStart": {
    "tokensExpected": 1
  },

  "onToken": {
    "token": "DATA"
  }

// ERR what? :-)
// Not sure...
// It's check whether the quoted string is valid.
// e.g. "blalalal"test" will throw a parse error.
  if(this.lexer.scoper === '"') {
    var a = JSON.parse(
      '{ "a": ' + token + '}'
    );
    token = a.a;
  }
